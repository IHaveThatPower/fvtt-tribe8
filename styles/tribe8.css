body.system-tribe8 {

--font-header: "Chainprinter", "Font Awesome 6 Pro", monospace;
--gap-standard: 0.4rem;
--gap-double: 0.8rem;
--gap-small: 0.1rem;

/**
 * The following colors use internal Foundry color variables, to
 * maintain theme consistency
 **/
--color-label-text: var(--color-text-emphatic);
--color-label-background: var(--color-cool-5);
--color-points-over-text: var(--color-level-error);
--color-edie-low: var(--color-level-error);
--color-points-over-background: var(--color-level-error-bg); /* color-mix(in srgb, var(--color-level-error-bg), transparent); */
--color-shock-state-border: color-mix(in srgb, var(--color-text-emphatic), transparent 90%);
--color-button-border: var(--color-light-5);
--color-button-border-hover: var(--color-light-3);

/**
 * The following colors are unique to this system, and have not
 * been vetted outside of dark mode
 */
--color-medium-gray: #887878;
--color-perk-granted: rgba(0, 96, 255, 0.5);
--color-flaw-granted: rgba(128, 48, 0, 0.5);
--color-maneuer-granted: var(--color-perk-granted);
--color-maneuver-bonus: rgba(0, 255, 154, 0.25);
--color-eminence-used: var(--color-flaw-granted);
--color-aspect-granted: var(--color-perk-granted);
--color-system-shock-healthy: rgb(114 170 205);
--color-system-shock-wounded: rgb(59 43 43);
--color-trauma-inactive: var(--color-medium-gray);
--color-trauma-active: var(--color-text-emphatic);
--color-multisix: #006c00;
--color-background-multisix: rgba(0, 109, 0, 0.2);
--color-allsix: green;
--color-fumble: red;
--color-unskilled: rgb(255, 200, 0, 0.25);

/* Alt rows */
--color-background-alt: color-mix(in srgb, var(--color-text-emphatic), transparent 95%);
--color-background-alt-bright: color-mix(in srgb, var(--color-text-emphatic), transparent 85%);
--color-points-over-background-alt: color-mix(in srgb, var(--color-level-error), transparent 95%);
--color-label-background-alt: color-mix(in srgb, var(--color-cool-5-50), var(--color-background-alt));
--color-perk-granted-alt: rgba(13, 109, 255, 0.45);
--color-flaw-granted-alt: rgba(141, 61, 13, 0.45);
--color-maneuer-granted-alt: var(--color-perk-granted-alt);
--color-maneuver-bonus-alt: rgba(13, 255, 167, 0.20);
--color-eminence-used-alt: var(--color-flaw-granted-alt);
--color-aspect-granted-alt: var(--color-perk-granted-alt);

/* Gradient Backgruonds */
--background-eminence-used: linear-gradient(
	to right,
	transparent,
	var(--color-eminence-used) 2ch,
	transparent
);
--background-eminence-checked: radial-gradient(
	circle,
	var(--color-text-primary),
	var(--color-text-primary) 50%,
	transparent 60%
);
--background-aspect-granted: linear-gradient(
	to right,
	transparent,
	var(--color-aspect-granted) 2ch,
	transparent
);
--background-aspect-granted-alt: linear-gradient(
	to right,
	transparent,
	var(--color-aspect-granted-alt) 2ch,
	transparent
);
--background-perk-granted: linear-gradient(
	to right,
	transparent,
	var(--color-perk-granted) 2ch,
	transparent
);
--background-perk-granted-alt: linear-gradient(
	to right,
	transparent,
	var(--color-perk-granted-alt) 2ch,
	transparent
);
--background-flaw-granted: linear-gradient(
	to right,
	transparent,
	var(--color-flaw-granted) 2ch,
	transparent
);
--background-flaw-granted-alt: linear-gradient(
	to right,
	transparent,
	var(--color-flaw-granted-alt) 2ch,
	transparent
);
--background-maneuver-granted: linear-gradient(
	to right,
	transparent,
	var(--color-maneuver-granted) 0.5ch,
	transparent
);
--background-maneuver-granted-alt: linear-gradient(
	to right,
	transparent,
	var(--color-maneuver-granted-alt) 0.5ch,
	transparent
);
--background-maneuver-bonus: linear-gradient(
	to right,
	transparent,
	var(--color-maneuver-bonus) 0.5ch,
	transparent
);
--background-maneuver-bonus-alt: linear-gradient(
	to right,
	transparent,
	var(--color-maneuver-bonus-alt) 0.5ch,
	transparent
);
--background-gear-list: linear-gradient(
	to right,
	transparent,
	var(--color-background-alt)
);
--background-gear-list-alt: linear-gradient(
	to right,
	transparent,
	var(--color-background-alt-bright)
);

/* Gradient Borders */
--border-header-left: linear-gradient(
	to left,
	transparent,
	var(--color-light-5) 5%,
	transparent
) 1;
--border-header-right: linear-gradient(
	to right,
	transparent,
	var(--color-light-5) 5%,
	transparent
) 1;
--border-header-right-shorttail: linear-gradient(
	to right,
	transparent,
	var(--color-light-5) 2%,
	var(--color-light-5) 90%,
	transparent
) 1;
--border-header-broken: linear-gradient(
	to right,
	transparent,
	var(--color-light-5) 5%,
	transparent 66%,
	var(--color-light-5) 95%,
	transparent
) 1;

/* Radii */
--attribute-block-top-corners: 0.5rem;
--attribute-block-bottom-corners: 0.75rem;

div.character-sheet h2,
div.item-sheet h2,
div.item-sheet div.name,
div.item-sheet div.specific,
div.item-sheet div.artwork,
div.character-sheet h3,
div.item-sheet h3 {
	width: 100%;
	font-family: var(--font-header);
	font-variant: small-caps;
	font-size: 1.5rem;
	margin-top: 0.75rem;
	word-spacing: -0.5rem;
	margin-bottom: 0.15rem;
}
div.character-sheet h2:first-child,
div.item-sheet h2 {
	margin: 0;
}
div.item-sheet h3 {
	margin-bottom: 0;
}
div.item-sheet div.name,
div.item-sheet div.specific,
div.item-sheet div.artwork {
	margin-top: 0;
}
div.character-sheet h3,
div.item-sheet h3 {
	font-size: 1.15rem;
}

.sheet hr {
	flex-basis: 100%;
	width: 100%;
	border: none;
	height: 0;
	margin: 0;
	margin-bottom: 0.25rem;
}

/**
 * Silhouette Dice
 */
div.dice-roll h4.dice-total.fumble {
	color: var(--color-fumble);
}
div.dice-roll h4.dice-total.multisix {
	border-color: var(--color-multisix);
	border-width: 2px;
	background: var(--color-background-multisix);
}
div.dice-roll h4.dice-total.allsix {
	color: var(--color-allsix)
}
div.dice-roll .dice-formula.unskilled {
	background: var(--color-unskilled);
}

/**
 * General Applications
 */
.application .tribe8 {
	padding: 0.25rem;

	.points-block {
		display: flex;
		flex-flow: column nowrap;
		flex-grow: 0;
		flex-shrink: 0;
	}

	.points-type {
		text-align: center;
		background: var(--color-label-background);
		font-weight: bold;
		font-variant: small-caps;
	}

	.identity {
		width: 100%;
		display: flex;
		flex-flow: row;
		align-items: end;
		gap: var(--gap-standard);
	}

	.name, .specific {
		margin-top: 0;
		overflow: hidden;
		text-overflow: ellipsis;
		display: flex;
		flex: 1 1 fit-content;
		white-space: nowrap;
	}
	.name input[type=text],
	.specific input[type=text] {
		padding: 0;
	}
	/* Item sheet artwork thumbnails */
	.identity .artwork {
		min-height: 2rem;
		flex: 0 0 2rem;
		border: none;
		cursor: pointer;
	}
	.identity .artwork img {
		width: 100%;
		height: 100%;
		object-fit: contain;
		max-height: 2rem;
	}

	.value {
		text-align: center;
		font-size: 125%;
		border: 1px inset var(--color-medium-gray);
		min-width: 4rem;
	}
	.points {
		display: flex;
		flex-flow: row nowrap;
	}
	.points>div {
		display: flex;
		flex-flow: column nowrap;
	}
	.points input {
		padding: 0;
		text-align: center;
		margin: 0;
		line-height: 100%;
		height: 1rem;
		width: 2rem;
		border-radius: 0;
		border: 1px inset var(--color-medium-gray);
	}
	.points label,
	.specializations label {
		width: 100%;
		background: var(--color-label-background);
		font-size: 85%;
		text-align: center;
		display: block;
		color: var(--color-label-text);
	}
	.points .cp label {
		border-radius: 0 0 0 0.5rem;
	}
	.points .xp label {
		border-radius: 0 0 0.5rem 0;
	}

	span.input-sizer {
		display: inline-grid;
		position: relative;
	}
	span.input-sizer::after {
		content: attr(data-value) ' ';
		visibility: hidden;
		white-space: pre-wrap;
		grid-area: 1 / 1;
		z-index: -1;
		position: relative;
		box-sizing: border-box;
		padding: 0 0.5rem;
		border: 1px solid transparent;
	}

	.dot-checkbox input[type="checkbox"] {
		margin: 0;
		height: 1rem;
		width: 1rem;
		appearance: none;
		border: 1px solid var(--color-button-border);
		border-radius: 40%;
		background: none;
	}
	.dot-checkbox input[type="checkbox"] {
		border-color: var(--color-button-border-hover);
	}
	.dot-checkbox input[type="checkbox"]:checked {
		background: none;
		background-image: var(--background-eminence-checked);
	}
	.dot-checkbox input[type="checkbox"]::before {
		display: none;
	}
	.dot-checkbox input[type="checkbox"]::after {
		display: none;
	}

	span.toggle {
		display: flex;
		flex-flow: row;
		--toggle-width: 2rem;
		--toggle-height: 0.75rem;
		--toggle-height-radius: calc(var(--toggle-height) / 2 );
		align-items: end;
		justify-content: center;
		gap: var(--gap-standard);
		cursor: pointer;

		span.toggle-option {
			font-size: calc(max(60%, var(--gap-double)));
			display: inline-block;
		}
		span.toggle-widget {
			display: inline-block;
			width: var(--toggle-width);
			height: var(--toggle-height);
			border-radius: var(--toggle-height-radius);
			background: var(--color-medium-gray);
			position: relative;
			margin-bottom: calc(var(--toggle-height) / 10);
		}
		span.toggle-widget::before {
			content: "";
			position: absolute;
			border-radius: var(--toggle-height-radius);
			width: var(--toggle-height);
			height: var(--toggle-height);
			background: var(--color-text-emphatic);
			right: calc(var(--toggle-width) - var(--toggle-height));
			border: calc(var(--toggle-height-radius) / 2) outset;
			transition: right 0.5s ease-in-out;
			box-shadow: 0 0 4px 3px rgba(0, 0, 0, 0.75);
		}
	}
	span.toggle.right span.toggle-widget::before {
		right: 0;
	}

	.block-tab-label {
		text-align: center;
		color: var(--color-label-text);
		font-weight: bold;
		display: block;
		border-radius: var(--attribute-block-top-corners) var(--attribute-block-top-corners) 0 0;
		flex-grow: 0;
		justify-content: center;
		min-width: 2rem;
		/* background: linear-gradient(to top, var(--color-label-background) 25%, transparent 80%); */
		background: var(--color-label-background);
	}
}

/**
 * The Character Sheet, which also shares with the Attribute Editor
 * (though it has overrides in its own section)
 */
.tribe8.sheet.actor.character, .tribe8.tribe8app.attributes {
	height: 100%;
	position: relative;

	--header-height: 12.5rem;
	--nav-height: 2.5rem;

	.tab.active {
		display: flex;
		flex-flow: column;
		flex: 1 1 auto;
		min-height: 0;
		width: 100%;
		overflow: clip;
	}

	nav.tabs {
		font-family: var(--font-header);
		position: absolute;
		top: calc(var(--header-height) + 0.25rem);
		height: var(--nav-height);
		align-items: center;
		justify-content: center;
		margin-inline: auto;
		left: 0;
		right: 0;
		width: 100%;
		border-width: 1px;
		padding: 0 2rem;
		background: none;
	}

	h2 {
		display: grid;
		grid-template-columns: 1fr min-content;
		align-items: center;
		margin-bottom: 0.2rem;
	}
	h2 span:first-child {
		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;
	}
	h2.skills>span:first-child {
		display: flex;
		flex-flow: row;
		gap: var(--gap-standard);
	}
	h2 button {
		min-height: 0;
		padding: 0.15rem var(--gap-standard) 0.05rem;
		height: calc(100% - 0.2rem);
		display: block;
	}
	h2 button i.fa, h3 button i.fa, dt button i.fa {
		display: block;
		margin-bottom: -0.065rem; /* Account for weird vertical offset */
	}
	.list {
		margin-left: 0.25rem;
	}
	.list>.term {
		font-weight: bold;
		font-size: 1.1rem;
		font-variant: small-caps;
	}
	h3 {
		border-image: var(--border-header-right);
		margin-top: 0.25rem;
	}
	.attribute-set {
		display: flex;
		flex-flow: row wrap;
		gap: var(--gap-small);
		background:  color-mix(in srgb, var(--color-label-background), transparent 60%);
		border-radius: var(--gap-double);
		border-top: 1px solid var(--color-light-5);
		padding: var(--gap-standard);
	}
	.identity {
		cursor: pointer;
	}
	.identity:hover {
		font-weight: bold;
	}

	.character-sheet.header { /* Header */
		display: flex;
		flex-flow: row;
		gap: var(--gap-double);
		height: var(--header-height);
		flex: 0 0 var(--header-height);
		margin-bottom: calc(var(--nav-height) + 0.5rem);
	}
	.character-sheet.header>div {
		flex: 0 1 auto;
	}
	.character-sheet.header .panes-column {
		display: flex;
		flex-flow: column;
		justify-content: start;
		align-items: center;
		flex: 3 3 0;
		gap: 0.55rem;
		min-width: var(--header-height);
	}
	.character-sheet.header .panes-column:first-child {
		flex: 0 0 fit-content;
		min-width: unset;
	}
	.character-sheet.header .panes-column:last-child {
		flex: 2 2 0;
	}
	.game-logo {
		background: url("/systems/tribe8/assets/logo.webp");
		background-size: contain;
		background-repeat: no-repeat;
		flex: 1 1 0;
		min-height: 0;
		max-height: 2.4rem;
		width: 100%;
		background-position: center top;
	}

	/* Character Portrait */
	.character-sheet.header .portrait {
		position: relative;
		cursor: pointer;
		aspect-ratio: 1;
		height: 100%;
		border-style: solid;
		border-image: linear-gradient(to top, var(--color-light-5), transparent) 1;
		border-width: 0 1px;
		border-radius: 0;
	}
	.portrait .content {
		position: absolute;
		width: 100%;
		height: 100%;
		align-content: center;
		text-align: center;
		overflow: hidden;
		font-size: 5rem;
		line-height: 85%;
		font-family: var(--font-header);
		text-transform: uppercase;
	}
	.portrait .content img {
		width: 100%;
		height: 100%;
		object-fit: contain;
	}

	.footer {
		flex: 0 0 5rem;
		min-height: 0;
		display: flex;
		flex-flow: row;
		justify-content: space-between;
		align-items: center;
		border-top: 1px solid var(--color-light-5);
		left: 0;
		right: 0;
		width: 100%;
		overflow: hidden;
		gap: var(--gap-double);
	}
	.footer h3 {
		font-size: 1.1rem;
		display: grid;
		grid-template-columns: 1fr min-content;
		align-items: center;
		border: none;
		gap: var(--gap-standard);
		text-align: left;
		white-space: nowrap;
		padding: 0 var(--gap-standard);
	}

	/* Name, Tribe, Role */
	.character-basics {
		display: flex;
		flex-flow: row wrap;
		gap: var(--gap-small);
		position: relative;
		width: 100%;
	}
	.character-basics .field {
		display: flex;
		flex-flow: row;
		flex: 1 1 40%;
	}
	.character-basics .field:first-child {
		flex: 1 1 100%;
	}
	.character-basics input {
		width: 100%;
		flex: 1 1 0;
		padding: revert;
		height: 2.4rem;
	}
	.character-basics .field.name,
	.character-basics .field.name input {
		font-size: 1.8rem;
	}
	.character-basics .field.name input {
		grid-area: 1 / 1;
		background: none;
		/*
		border: solid var(--color-light-5);
		border-width: 0 0 1px 0;
		border-radius: 0 var(--gap-standard);
		*/
		border-image: linear-gradient(to top, var(--color-light-5), transparent 50%) 1;
		border-width: 1px;
		border-radius: 0;
		padding: var(--gap-small) var(--gap-standard);
		text-align: center;
	}
	.character-basics .field.name span.input-sizer::after {
		max-width: 15rem;
	}
	.player.field {
		position: absolute;
		padding: 0 0.25rem;
		background: var(--color-label-background);
		font-weight: bold;
		font-size: 0.75rem;
		color: var(--color-light-5);
		/*
		left: 50%;
		transform: translate(-50%, 0);
		*/
		right: 0;
		/* top: 0; */
		bottom: -1rem;
		max-width: calc(100% - var(--gap-standard) * 2);
		/* margin-top: -1rem; */
		text-overflow: ellipsis;
		border: 1px solid var(--color-light-5);
		border-top: none;
		border-radius: 0 0 var(--gap-standard) var(--gap-standard);
		/*
		border-bottom: none;
		border-radius: var(--gap-standard) var(--gap-standard) 0 0;
		*/
	}

	/* Points & Edie Summary */
	.points-summary {
		flex: 0 0 min-content;
	}
	.points-summary .points-list {
		display: grid;
		grid-template-columns: 2.5rem 1fr;
		height: 100%;
		align-items: center;
		gap: var(--gap-small) 0;
	}
	.points-summary .term,
	.points-summary .detail {
		display: block;
		margin: 0;
		font-size: 0.9rem;
		font-variant: normal;
		background: unset;
	}
	.points-summary .points-list>.term {
		text-align: left;
	}
	.points-summary>.points-list>*:nth-child(4n+3),
	.points-summary>.points-list>*:nth-child(4n+4) {
		background: var(--color-background-alt);
	}
	.points-summary>.points-list>*:nth-child(4n+3) .over,
	.points-summary>.points-list>*:nth-child(4n+4) .over {
		background: var(--color-points-over-background-alt);
	}
	.points-summary>.points-list .points-list {
		display: flex;
		margin: 0 auto 0 0;
		padding-left: 0;
		flex-flow: row;
		justify-content: end;
		gap: var(--gap-standard);
		list-style-type: none;
	}
	.points-summary>.points-list .points-list .detail {
		text-align: right;
		white-space: nowrap;
		flex: 1 1 50%;
	}
	.points-summary input {
		padding: 0;
		text-align: center;
		margin: 0;
		line-height: 100%;
		height: 1rem;
		width: 2rem;
		flex: 1 0 2rem;
		border-radius: 0;
		border: 1px ridge var(--color-medium-gray);
	}
	.points-summary .over,
	.points-summary .over input {
		color: var(--color-points-over-text);
		font-weight: bold;
		background: var(--color-points-over-background);
	}
	.edie-summary .points-list {
		display: flex;
		flex-flow: column;
	}
	.edie-summary .points-list .block-tab-label {
		margin: 0;
	}
	.edie-summary button {
		display: inline-flex;
		padding: 0;
		text-align: center;
		margin: 0;
		line-height: 100%;
		height: 1rem;
		width: 1rem;
		min-height: unset;
		flex: 0 0 1rem;
	}
	.term.edie-other {
		white-space: nowrap;
	}
	.detail.edie-other {
		display: flex;
	}

	/* Attributes */
	.primary-attributes, .secondary-attributes {
	}
	.primary-attributes .attribute-set, .secondary-attributes .attribute-set {
		width: 100%;
		min-width: 12.5rem;
		max-width: 20rem;
	}
	.primary-attributes .block-tab-label, .secondary-attributes .block-tab-label {
		text-transform: uppercase;
	}
	.header .panes-column>.primary-attributes {
		cursor: pointer;
		flex: 0 0 fit-content;
	}
	.primary-attributes h3, .secondary-attributes h3 {
		border: none;
		margin-top: 0;
		text-align: center;
	}
	.primary-attributes h3 {
		cursor: auto;
	}
	.attribute-set+h3 {
		margin-top: var(--gap-standard);
	}
	.secondary-attributes {
		align-content: end;
	}
	.secondary-attributes h3 span {
		display: inline-block;
	}
	.secondary-attributes h3 span:nth-child(2) {
		margin-left: var(--gap-standard);
		font-size: var(--gap-double);
		vertical-align: middle;
	}
	.secondary-attributes .attribute-block+h3 {
		margin-top: var(--gap-standard);
	}

	.attribute-block {
		display: flex;
		flex-flow: column nowrap;
		flex: 1 0 0;
	}
	.character-sheet .attribute-block .value {
		min-width: unset;
		border: none;
		flex-grow: 1;
		align-content: center;
	}
	.primary-attributes .attribute-block .value {
		border-radius: 0 0 var(--attribute-block-top-corners) var(--attribute-block-top-corners);
	}
	.attribute-block.selected .name {
		background: var(--color-warm-3);
		border-top-color: var(--color-warm-1);
		border-right-color: var(--color-warm-1);
	}
	.attribute-block.selected .value {
		background: var(--color-warm-2);
		border-bottom-color: var(--color-warm-1);
		border-left-color: var(--color-warm-1);
	}
	.primary-attributes .attribute-block:not(.selected) .name:hover {
		background: var(--color-label-background-alt);
	}
	.primary-attributes .attribute-block.selected .name:hover {
		background: color-mix(in srgb, var(--color-warm-3), var(--color-label-background-alt) 50%);
	}
	.primary-attributes .attribute-block:not(.selected) .value:hover {
		background: var(--color-background-alt-bright);
	}
	.primary-attributes .attribute-block.selected .value:hover {
		background: color-mix(in srgb, var(--color-warm-2), var(--color-background-alt-bright) 50%);
	}
	.attribute-block .points>div {
		flex: 1 0 0;
	}
	.attribute-block .points input {
		min-width: 3ch;
		width: 100%;
	}
	.move-rates {
		display: grid;
		grid-template-columns: repeat(5, 1fr);
		width: 100%;
		overflow: hidden;
	}
	.attribute-block.move-rate {
		width: 100%;
		overflow: hidden;
		min-width: 2.5rem;
	}
	.attribute-block.move-rate .name {
		text-overflow: ellipsis;
		font-size: 80%;
	}
	.attribute-block.move-rate .value {
		text-overflow: ellipsis;
		font-size: 0.9rem;
	}

	/* List Items with Identity Fields */
	.tab .identity .name {
		flex: 0 0 fit-content;
	}
	.tab .identity .specific,
	.tab .identity .name:last-child {
		text-overflow: ellipsis;
	}
	.tab .identity div:first-child {
		padding-left: 0.1rem;
		padding-right: 0;
	}

	/* Skills */
	.skills-list-container {
		display: block;
		overflow: hidden auto;
		min-height: auto;
	}
	.skills-list {
		display: block;
		column-count: 2;
		gap: var(--gap-standard);
	}
	.skill {
		display: grid;
		grid-template-columns: 1fr repeat(3, min-content);
		min-width: fit-content;
		width: unset;
		position: relative;
		align-items: stretch;
		break-inside: avoid;
	}
	.skills-list .skill:has(div.specializations) {
		grid-template-columns: auto auto repeat(3, min-content);
	}
	.skills-list .skill:nth-child(odd) {
		background: var(--color-background-alt);
	}
	.skills-list .skill .identity {
		display: grid;
		grid-template-columns: min-content auto 1fr;
		gap: 0.25rem;
		align-items: center;
		width: unset;
		margin-right: var(--gap-standard);
		overflow: hidden;
		max-height: 2.5rem;
	}
	.skills-list .skill .identity>div {
		padding: 0;
		/* height: 1.5rem; */
		background: none;
		white-space: nowrap;
	}
	.skills-list .skill .identity,
	.skills-list .skill .identity input,  /* Old-style */
	.skills-list .skill .identity>div {
		font-size: 1rem;
	}
	.skills-list .skill .identity .name span.combatCategory {
		font-size: 75%;
		color: var(--color-medium-gray);
		vertical-align: super;
	}
	.skills-list .skill .points-type {
		min-width: unset;
		text-transform: none;
		border-radius: 0;
	}
	.skills-list .skill .value {
		min-width: unset;
		width: 2.4rem;
		box-sizing: border-box;
		overflow: hidden;
		flex: 0 0 1.4rem; /* Vertical sizing */
		border: none;
	}
	.skills-list .skill .edie-block {
		/* margin-left: var(--gap-standard); */
	}
	.skills-list .skill .edie-block .value {
		display: grid;
		grid-template-columns: 1fr min-content;
		border: none;
		width: 3rem;
	}
	.skills-list .skill .edie-block .value input {
		font-size: 100%;
		padding: 0;
		margin: 0;
		text-align: center;
		height: 100%;
		line-height: unset;
	}
	.skills-list .specializations {
		display: flex;
		flex: 2 0 6rem;
		flex-flow: column;
		margin-top: unset;
		margin-bottom: unset;
		height: unset;
		margin-right: 0.25rem;
		overflow: hidden;
	}
	.skills-list .specializations label {
		text-align: left;
		font-weight: bold;
		font-variant: small-caps;
		font-size: 90%;
		padding: 0.1rem 0.2rem;
		border-radius: 0.25rem 0.5rem 0 0;
		height: calc(1rem - 1px);
		flex: 0 0 calc(1rem - 1px);;
		margin-top: 1px;
		text-overflow: ellipsis;
		overflow: hidden clip;
		text-transform: none;
	}
	.skills-list .specializations .specialization-list {
		width: 100%;
		min-height: 1rem;
		font-size: var(--gap-double);
		line-height: 100%;
		padding: 0.2rem 0.35rem;
		background: none;
		border: 1px solid;
		border-left: 0;
		border-right: 0;
		border-radius: 0 0 0.5rem 0.5rem;
		resize: none;
		flex: 1 0 1rem;
	}

	/* Abilities */
	.abilities.tab.active {
		display: flex;
		flex-flow: row;
		gap: var(--gap-double);
	}
	.abilities.tab>.perks-flaws, .abilities.tab>.magic {
		height: 100%;
		flex: 1 1 0;
		overflow-y: auto;
	}
	.abilities.tab h3 {
		border-image: var(--border-header-right);
		border-width: 0 0 1px 0;
		border-style: solid;
		padding: 0 0 var(--gap-small) 0;
	}
	.abilities.tab *:not(h2)+h3 {
		margin-top: var(--gap-double);
	}

	/* Perks & Flaws */

	.pf {
		padding-left: 0.25rem;
	}
	.pf:nth-child(odd) {
		background: var(--color-background-alt);
	}
	.pf.perk.granted {
		background-image: var(--background-perk-granted);
	}
	.pf.flaw.granted {
		background-image: var(--background-flaw-granted);
	}
	.pf.perk.granted:nth-child(odd) {
		background-image: var(--background-perk-granted-alt);
	}
	.pf.flaw.granted:nth-child(odd) {
		background-image: var(--background-flaw-granted-alt);
	}
	.pf .buttons {
		display: flex;
		flex-flow: row nowrap;
	}

	.abilities.tab .magic h3 {
		display: grid;
		grid-template-columns: 1fr min-content;
		align-items: end;
		border-image: var(--border-header-broken);
	}
	.magic h3.has-skill {
		cursor: pointer;
	}
	.magic span:last-child {
		font-size: 85%;
	}
	.magic .identity {
		display: grid;
		grid-template-columns: min-content 1fr min-content;
	}
	.magic .identity .specific {
		text-align: right;
	}
	.magic dt {
		display: grid;
		grid-template-columns: 1fr min-content;
		align-items: center;
		margin: 0;
		line-height: 100%;
		font-size: 1rem;
		margin-top: var(--gap-standard);
	}
	.magic dt button {
		min-height: 0;
		font-size: .8rem;
		padding: 0.15rem 0.15rem 0 0.15rem;
		line-height: 100%;
		height: min-content;
		display: block;
	}
	.magic dd {
		margin-bottom: 0.2rem;
	}
	.magic dd>div {
		margin-left: -1rem; /* Negates margin imposed by parent dd */
		padding-left: 1rem;
		align-items: center;
	}
	.magic dd>div:nth-child(odd) {
		background: var(--color-background-alt);
	}
	.magic dd>div .identity {
		display: block;
	}
	.magic dd>div .identity>div {
		display: inline-block;
		vertical-align: bottom;
	}
	.eminence {
		display: grid;
		grid-template-columns: 1fr min-content;
		gap: var(--gap-standard);
	}
	.eminence.used {
		background: none;
		background-image: var(--background-eminence-used);
	}
	.eminence .used {
		display: flex;
		width: 1.05rem;
		align-items: center;
		text-align: right;
		padding: 0.1rem 0 0.1rem 0.1rem;
		box-sizing: content-box;
	}
	.aspect  {
		gap: var(--gap-standard);
		justify-content: space-between;
		display: grid;
		grid-template-columns: 1fr 1.4rem 3rem;
	}
	.totem {
		display: grid;
		grid-template-columns: 1fr 2rem;
		gap: var(--gap-standard);
	}
	dd>div.granted {
		background: none;
		background-image: var(--background-aspect-granted);
	}
	dd>div.granted:nth-child(odd) {
		background-image: var(--background-aspect-granted-alt);
	}
	dd>div .cost,
	dd>div .complexity {
		white-space: nowrap;
	}
	.aspect .identity {
		flex: 0 0 fit-content;
	}
	.aspect .complexity {
		flex: 0 0 3rem;
		text-align: center;
	}
	dd>div .cost {
		flex: 0 0 1.5rem;
		text-transform: uppercase;
		text-align: center;
	}

	.injuries, .shock-container {
		display: flex;
		flex-flow: column;
		flex: 0 0 min-content;
		gap: 0; /* var(--gap-double); */
		align-items: center;
		min-height: 0;
	}
	.shock-container {
		flex: 1 1 fit-content;
		height: 100%;
		min-width: min-content;
		max-width: max-content;
	}
	.injuries .secondary-attributes {
		flex-flow: row;
		min-height: 0;
		flex: 1 1 auto;
	}
	.shock-container h3 {
		text-align: center;
	}
	.injury-block {
		flex: 1 0 fit-content;
		display: flex;
		flex-flow: column;
		gap: 0;
	}
	.injury-block .injury-value {
		font-size: 1rem;
		height: 1.05rem;
		line-height: 1.05rem;
		text-align: center;
		overflow: hidden;
	}
	.injury-block .injury-value input {
		padding: 0;
		margin: 1px 0 1px;
		text-align: center;
		font-size: 1rem;
		height: calc(100% - 2px);
		text-align: center;
	}
	.injury-block .injury-value i {
		color: var(--color-trauma-inactive);
	}
	.injury-block .injury-value.trauma i {
		color: var(--color-trauma);
	}
	.shock {
		display: flex;
		flex-flow: row;
		gap: var(--gap-small);
		/* width: 100%; */
		flex: 0 0 fit-content;
		justify-content: center;
		/**
		 * Footer is 0.5rem, header of System Shock is 1.5rem,
		 * including margins, borders are 1px on each side, and we
		 * don't want to entirely fill the space, so shrink the
		 * computation to ~75%
		 */
		font-size: calc((3.5rem - 2px) * 0.75);
	}
	.shock-state {
		display: inline-flex;
		flex: 1 1 1rem;
		position: relative;
		border-radius: 25%;
		border: 1px solid var(--color-shock-state-border);
		height: 100%;
		max-width: fit-content;
		/**
		 * This is an interesting hack to make gradient borders work without
		 * nested elements. Ultimately decided not to use it for now, but
		 * keeping it here if I want it again later.
		 */
		/*
		background-image: radial-gradient(circle, transparent 0%, transparent 65%, white 100%);
		background-origin: border-box;
		background-clip: content-box, border-box;
		*/
	}
	.shock-state:after {
		content: "";
		display: block;
		padding-bottom: 100%; /* Black magic */
	}
	.shock i {
		/* position: absolute; */
		width: 100%;
		height: 100%;
		overflow: hidden;
		align-content: center;
		text-align: center;
	}
	.shock i.healthy {
		color: var(--color-system-shock-healthy);
	}
	.shock i.wounded {
		color: var(--color-system-shock-wounded);
	}

	/**
	 * Character Sheet Equipment
	 */
	.equipment .gear-lists {
		overflow-y: auto;
	}
	.equipment h2 {
		--header-height: 1.25rem;
		grid-template-columns: 1fr min-content;
		gap: var(--gap-standard);
		border: none;
		align-items: end;
		font-size: var(--header-height);
	}
	.equipment h2 span {
		white-space: nowrap;
	}
	.equipment h2 button {
		display: flex;
		width: var(--header-height);
		height: var(--header-height);
	}
	.equipment .armor-list h2 {
		grid-template-columns: min-content 1fr min-content;
	}
	.equipment .armor-list h2 span:nth-child(2),
	.combat .combat-pane.armor h2 span:nth-child(2) {
		font-size: 1rem;
	}
	.gear-lists {
		border-bottom: 1px solid var(--color-light-5);
	}
	.gear-list {
		min-height: 5rem;
	}
	.gear-list+.gear-list {
		margin-top: var(--gap-double);
	}
	.gear-list summary {
		list-style-position: outside;
		margin-left: 1rem;
	}
	.gear-list summary .gear {
		display: inline-block; /* Needed to get the marker to behave */
		width: 100%; /* Expand the div back out so it's the same size as the others */
	}
	.gear-list blockquote {
		font-style: unset;
		font-family: var(--font-body);
		padding: 0 0 0 1rem;
	}
	.gear-list>.gear, /* Non-contained items */
	.gear-list blockquote>.gear { /* Contained items that are not themselves containers */
		padding: 0 0 0 1rem;
	}
	.gear-list>.gear, /* Non-contained items */
	.gear-list summary, /* Containers */
	.gear-list blockquote>.gear { /* Contained items that are not themselves containers */
		background-image: var(--background-gear-list);
	}
	.gear-list>.gear.gear-alt,
	.gear-list summary:has(.gear.gear-alt),
	.gear-list blockquote>.gear.gear-alt {
		background-image: var(--background-gear-list-alt);
	}
	.gear-list .gear-item-row .value {
		min-width: unset;
		font-size: revert;
		border: none;
	}
	.gear-list .gear-item-row {
		display: grid;
		grid-template-columns: 1fr 3rem 4rem 4rem 5rem 2rem 1.5rem 1.5rem;
	}
	.gear-list.armor-list .gear-item-row {
		display: grid;
		grid-template-columns: 1fr 3rem 2.5rem 4rem 1.5rem;
	}
	.gear-list .gear-item-row>div {
		overflow: hidden;
		text-align: center;
		/* Alternative to border-left: 1px dotted, with spacing control */
        background-image: linear-gradient(to bottom, var(--color-medium-gray) 35%, transparent 0%);
        background-position: left;
        background-size: 1px 3px;
        background-repeat: repeat-y;
	}
	.gear-list .gear-item-row>div:first-child {
		background: none;
		text-align: left;
	}
	.gear-list .gear-item-row .identity {
		display: grid;
		grid-template-columns: min-content 1fr;
		column-gap: var(--gap-standard);
	}
	.gear-list .gear-item-row.gear-list-header,
	.combat li.header {
		color: var(--color-medium-gray);
		background: var(--color-label-background);
	}
	.gear-list .gear-item-row.gear-list-header>*>* {
		display: inline-block;
		margin-bottom: var(--gap-small);
	}
	.gear-list .gear-item-row.gear-list-header .sorting>* {
		border-bottom: 1px dashed var(--color-light-5);
	}
	.gear-list .gear-item-row.gear-list-header>div:hover {
		font-weight: bold;
		cursor: pointer;
	}
	.equipment .load-slider {
		height: 1.5rem;
		width: 100%;
		border-radius: var(--gap-double);
		overflow: hidden;
		align-self: end;
		min-height: unset;
		display: flex;
		flex-flow: row;
		position: relative;
		margin: var(--gap-standard) 0;
		box-sizing: content-box;
		flex: 0 0 1.5rem;
	}
	.equipment .load-slider>div {
		position: relative;
	}
	.equipment .load-slider .unladen {
		flex: 1 1 50%;
		background: color-mix(in srgb, darkgreen, transparent 80%);
		height: 100%;
	}
	.equipment .load-slider .unladen-used {
		background: darkgreen;
		height: 100%;
	}
	.equipment .load-slider .laden {
		flex: 1 1 25%;
		background: color-mix(in srgb, darkgoldenrod, transparent 80%);
		height: 100%;
	}
	.equipment .load-slider .laden-used {
		background: darkgoldenrod;
		height: 100%;
	}
	.equipment .load-slider .burdened {
		flex: 1 1 25%;
		background: color-mix(in srgb, maroon, transparent 80%);
		height: 100%;
	}
	.equipment .load-slider .burdened-used {
		background: maroon;
		height: 100%;
	}
	.equipment .load-slider .overload {
		flex: 0 0 0;
		background: color-mix(in srgb, darkred, transparent 80%);
		height: 100%;
	}
	.equipment .load-slider .overload-used {
		background: red;
		height: 100%;
	}

	/* Variables used by the load-value stylers */
	--threshold-translate: translate(-50%, 0);
	--threshold-translate-first: translate(0.25rem, 0);
	--threshold-translate-last: translate(calc(-100% - 0.25rem), 0);

	.equipment .load-slider .load-value {
		position: absolute;
		bottom: 0;
		transform: var(--threshold-translate); /* translate(-50%, 0); */
		color: color-mix(in srgb, var(--color-text-emphatic), transparent 33.33%);
		white-space: nowrap;
	}
	.equipment .load-slider .load-value.unladen-threshold {
		transform: var(--threshold-translate-first); /* translate(0.25rem, 0); */
	}
	.equipment .load-slider .load-value.overload-threshold {
		transform: var(--threshold-translate-last); /* translate(calc(-100% - 0.25rem), 0); */
	}
	.equipment .load-slider .load-value.current-load {
		align-self: center;
		top: 0;
		bottom: unset;
		color: var(--color-text-emphatic);
	}

	/**
	 * Character Sheet Combat Tool
	 */
	.combat.active {
		display: flex;
		flex-flow: row;
		gap: var(--gap-standard) var(--gap-double);
	}
	.combat>* {
		flex: 1 1 0;
		min-width: 35%;
		overflow-y: auto;
		overflow-x: clip;
		display: flex;
		flex-flow: column;
		height: 100%;
		gap: var(--gap-double);
	}
	.combat .combat-pane h2 {
		display: grid;
		grid-template-columns: 1fr min-content;
		border-style: solid;
		border-width: 0 0 1px 0;
		border-image: var(--border-header-right);
	}
	.combat .combat-pane.armor h2 {
		grid-template-columns: repeat(4, min-content);
		align-items: end;
	}
	.combat .combat-pane.armor h2 span {
		white-space: nowrap;
	}
	.combat .combat-pane.armor h2 button+span {
		margin-left: var(--gap-standard);
	}
	.combat-pane .properties {
		display: flex;
		flex-flow: row;
		justify-content: space-evenly;
		gap: var(--gap-small);
	}
	.combat-pane .properties .property {
		text-align: center;
		display: flex;
		flex-flow: column;
	}
	.combat-pane.attack-summary {
		font-size: 1rem;
	}
	.combat-pane.attack-summary .properties {
		column-gap: 0.25rem;
	}
	.combat-pane.attack-summary .property {
		flex: 1 0 min-content;
	}
	.combat-pane.attack-summary .property-name {
		background: var(--color-label-background);
		border-radius: 1rem 1rem 0 0;
	}
	.combat-pane.attack-summary .property-value {
		font-size: 1.4rem;
		border: 1px inset var(--color-medium-gray);
		border-radius: 0 0 1rem 1rem;
	}
	.combat-pane.attack-summary .property.traits .property-value {
		font-size: revert;
		flex-grow: 1;
		align-content: center;
	}
	.combat-pane .properties .property-value input {
		grid-area: 1/1;
		text-align: center;
	}
	.combat-pane ul {
		list-style-type: none;
		margin: 0.5rem 0 0;
		padding: 0;
		display: flex;
		flex-flow: row wrap;
	}
	.combat-pane.armor ul {
		flex-flow: column;
	}
	.combat-pane li  {
		align-items: center;
		break-inside: avoid;
		gap: 0.2rem;
		margin-bottom: 0;
		flex: 1 1 50%;
		min-width: fit-content;
		display: grid;
		grid-template-columns: min-content 1fr;
	}
	.combat-pane.armor li {
		display: grid;
		grid-template-columns: 1fr repeat(5, 2rem);
		font-size: 1rem;
	}
	.combat-pane.armor li.header {
		font-size: revert;
	}
	.combat-pane li input {
		flex: 0 0 min-content;
	}
	.combat-pane li .identity {
		width: unset;
	}
	.combat-pane.armor li div {
		text-align: center;
	}
	.combat-pane.armor li .identity,
	.combat-pane.maneuvers .identity {
		display: inline-block;
		/*
		grid-template-columns: min-content 1fr;
		column-gap: var(--gap-standard);
		*/
		text-align: left;
		min-width: 0;
		width: 100%;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}
	.combat-pane.armor li .identity>*,
	.combat-pane.maneuvers .identity>* {
		display: inline;
	}

	/* Maneuvers */
	.maneuver .name {
		flex: 0 0 fit-content;
	}
	.maneuver {
		display: grid;
		grid-template-columns: min-content 1fr 2rem 3rem;
		padding-left: 0.15rem;
		align-items: center;
	}
	.maneuver.header .identity {
		grid-column: 1 / span 2;
	}
	.maneuver:nth-child(odd) {
		background: var(--color-background-alt);
	}
	.maneuver.granted {
		background-image: var(--background-maneuver-granted);
	}
	.maneuver.from-cpx {
		background-image: var(--background-maneuver-bonus);
	}
	.maneuver.granted:nth-child(odd) {
		background-image: linear-gradient(
			to right,
			transparent,
			var(--color-maneuver-granted-alt) 0.5ch,
			transparent
		);
	}
	.maneuver.from-cpx:nth-child(odd) {
		background-image: var(--background-maneuver-bonus-alt)
	}
	.maneuver>div {
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}
	.maneuver .complexity,
	.maneuver .cost {
		text-align: center;
	}
	.maneuver .points-type {
		min-width: unset;
		/* border-radius: 0.4rem 0.4rem 0 0; */
		font-size: 90%;
		line-height: 100%;
		padding: 0.2rem 0.2rem 0 0.2rem;
		margin-top: 0.1rem;
		text-align: center;
	}
	.maneuver .points-type:first-child {
		border-radius: var(--gap-standard) 0 0 0;
		text-align: left;
	}
	.maneuver .points-type:last-child {
		border-radius: 0 var(--gap-standard) 0 0;
	}
	.maneuvers .toggle {
		width: 100%;
	}
}

/**
 * The Attribute Editor App
 */
.tribe8.tribe8app.attributes {
	height: fit-content;
	z-index: auto;

	.attribute-editor {
		display: grid;
		grid-template-columns: repeat(5, 1fr);
		grid-row-gap: var(--gap-standard);
		height: 100%;
		grid-column-gap: var(--gap-small);
	}

	.attribute-block .name {
		flex: 0 0 fit-content;
		font-size: 1rem;
		border: 1px solid var(--color-light-5);
		border-width: 1px 0 0 0;
	}
	.attribute-block .value {
		flex: 1 0 fit-content;
		align-content: center;
		font-size: 1.5rem;
	}
	.attribute-block .points {
		flex: 1 0 fit-content;
	}
	.attribute-block .points input {
		flex: 1 0 1.5rem;
		font-size: 1.1rem;
		border: none;
	}
	.attribute-block div.points label {
		font-size: 0.9rem;
		font-weight: bold;
		border: 1px solid var(--color-light-5);
		border-width: 0 0 1px 0;
	}
	.attribute-editor .attribute-block .value,
	.attribute-editor .attribute-block:first-child .value,
	.attribute-editor .attribute-block:last-child .value {
		border-radius: 0 0 0 0;
		border: none;
	}
}

/**
 * Item Sheets
 */
.tribe8.sheet.item {
	display: flex;
	flex-direction: column;
	overflow-y: auto;
	height: fit-content;
	gap: var(--gap-standard);

	div.item-sheet {
		height: fit-content;
		display: flex;
		flex-flow: column;
	}
	div.name,
	div.specific {
		display: block;
	}
	div.name input[type=text],
	div.specific input[type=text] {
		height: 100%;
	}
	div.specific {
		border-radius: 1rem;
		border: 1px solid;
		border-top: none;
		white-space: nowrap;
		vertical-align: middle;
		font-size: 1.15rem;
		overflow: hidden;
		max-width: fit-content;
	}
	div.specific input[type=text] {
		padding-left: 0.5rem;
		text-overflow: ellipsis;
	}
	div.specific select {
		min-width: min-content;
		border-radius: 1rem;
		padding: 0 0.25rem;
		width: 100%;
		max-width: max-content;
	}
	div.costs {
		display: flex;
		flex-flow: row;
		justify-content: center;
		align-items: center;
		gap: var(--gap-standard);
		padding: var(--gap-standard) 0;
		margin: 0.2rem 0;
		background: var(--color-background-alt);
	}
	div.skill div.costs {
		align-items: start;
	}
	div.cost-field {
		flex: 0 0 min-content;
		display: grid;
		grid-template-columns: min-content min-content;
		align-items: center;
		gap: var(--gap-standard);
		line-height: 100%;
		padding: 0 0 0 0;
		align-content: center;
	}
	div.cost-field-checkbox {
		gap: 0.2rem;
	}
	div.cost-field label {
		white-space: nowrap;
	}
	div.cost-field input[type=text],
	div.cost-field input[type=number] {
		min-width: 2ch;
	}
	div.cost-field input[type="radio"] {
		margin: 0;
	}
	div.base-cost,
	div.per-rank {
		justify-content: center;
		margin-right: 1.2rem;
	}
	div.base-cost input,
	div.per-rank input {
		width: 4ch;
		text-align: center;
	}
	div.specify,
	div.ranked,
	div.granted,
	div.carried,
	div.equipped {
		text-align: left;
		white-space: nowrap;
		line-height: 100%;
		flex: 0 0 2rem;
		display: flex;
		align-content: center;

		label {
			display: flex;
			flex-flow: column;
			justify-content: center;
		}
	}
	div.ranked input,
	div.specify input,
	div.granted input {
		margin: 0;
		padding: 0;
		vertical-align: middle;
	}
	div.description {
		width: 100%;
		display: flex;
		flex-flow: column;
		flex: 1 1 fit-content;
	}
	div.description h3 {
		flex: 0 0 fit-content;
	}
	div.description>prose-mirror {
		flex: 1 0 fit-content;
		min-height: 12ex;
	}
	div.description div.editor-container,
	div.description div.editor-content {
		min-height: 12ex;
		height: fit-content;
		position: relative;
	}
	div.itemButtons {
		width: 100%;
		justify-items: center;
	}
	div.itemButtons button {
		position: relative;
		margin-left: auto;
		margin-right: auto;
	}
	div.granted input {
		margin: revert;
		padding: revert;
		vertical-align: revert;
		bottom: revert;
	}
	div.properties {
		display: flex;
		flex-flow: row wrap;
		column-gap: var(--gap-standard);
		row-gap: var(--gap-double);
		justify-content: center;
		margin: 0.2rem 0;
	}
	.weapon div.properties {
		row-gap: var(--gap-standard);
	}
	div.identity+div.properties {
		margin-top: var(--gap-standard); /* Give this one a little more space, since it won't have div.costs to buffer it */
	}
	div.property {
		display: block;
		gap: var(--gap-standard);
		align-items: center;
		break-inside: avoid;
		justify-content: end;
	}
	div.property.value {
		font-size: revert;
		border: revert;
		min-width: revert;
	}

	div.property div.property-name {
		text-align: center;
	}
	div.property:not(.storage) div.property-name {
		order: 2;
	}
	div.property:not(.storage) div.property-input {
		order: 1;
	}
	div.property input {
		min-width: 4ch;
		width: auto;
		text-align: center;
		grid-area: 1/1;
	}
	div.property select {
		padding: 0;
	}
	div.storage-and-carrying {
		width: 100%;
		display: grid;
		grid-template-columns: 1fr min-content min-content;
		align-items: center;
		gap: var(--gap-standard);
	}
	div.property.storage {
		width: 100%;
		display: grid;
		grid-template-columns: min-content 1fr;
	}
	div.property.storage div.property-name {
		text-align: left;
	}
	span.input-sizer::after {
		padding: 0 0.5rem;
		margin: 0;
		border: 1px solid;
	}
	div.used {
		text-align: left;
		white-space: nowrap;
		line-height: 100%;
		flex: 0 0 min-content;
		align-content: center;
		align-items: center;
		display: flex;
		flex-flow: column;
		gap: 0.15rem;
	}
	div.used label {
		order: 1;
		text-transform: uppercase;
		font-weight: bold;
		font-size: .7rem;
		line-height: 0.5rem;
	}
	div.used input {
		order: 1;
		margin: 0;
	}
	div.allowed {
		display: flex;
		align-items: center;
		justify-content: end;
	}
	div.pf div.base-cost,
	div.pf div.per-rank {
		margin-right: var(--gap-standard);
	}
	div.pf div.points {
		display: flex;
		flex-flow: column;
	}
	div.pf div.points div.points-block {
		align-items: center;
		width: 100%;
		display: grid;
		grid-template-columns: 1fr min-content min-content min-content min-content 1fr;
	}
	div.pf div.points div.points-block:nth-child(odd) {
		background: var(--alt-background);
	}
	div.pf div.points div.points-block input[type="radio"] {
		border: 0;
		height: 100%;
		align-content: center;
	}
	div.pf div.points div.points-block label {
		width: revert;
		background: unset;
		font-size: revert;
		text-align: revert;
		color: revert;
		height: 100%;
		align-content: center;
	}
	div.pf div.points div.points-block button {
		width: fit-content;
		justify-self: end;
	}
	div.rank {
		white-space: nowrap;
		height: 100%;
		align-content: center;
	}
	div.skill div.costs {
		gap: 0;
	}
	div.points-block input { /* EDie only */
		text-align: center;
		height: 100%;
		padding: 0;
		margin: 0;
		border: 0;
	}
	div.points button {
		flex: 1 0 0;
	}
	.edie-too-low {
		color: var(--color-edie-low);
	}
	div.specializations {
		flex-basis: 0;
		flex-grow: 1;
		flex-shrink: 1;
	}
	h3 {
		margin-top: var(--gap-standard);
	}
	div.specializations label {
		width: revert;
		background: unset;
		font-size: revert;
		text-align: revert;
		color: revert;
	}
	div.specialization,
	div.add-specialization {
		display: grid;
		grid-template-columns: 1fr repeat(6, min-content) 2.5rem;
		align-items: center;
	}
	div.add-specialization {
		margin-top: var(--gap-standard);
	}
	div.add-specialization input[type=text] {
		margin-right: 0.25rem;
	}
	div.specialization button,
	div.add-specialization button {
		margin-left: 0.25rem;
	}

	div.property.range {
		display: flex;
		flex-flow: column;
	}
	div.property.range div.property-name {
		order: 1;
	}
	div.property.range div.property-input {
		display: flex;
		flex-flow: row;
		align-items: center;
		justify-content: center;
		order: 2;
		gap: 0.2rem;
	}
	div.property.range div.property-input>* {
		display: block;
		flex: 0 0 min-content;
	}

	div.property.range div.property-input button {
		transition: none;
		padding: 0 0.2rem;
		border-radius: var(--gap-double);
		height: 1.5rem; /* calc(var(--input-height) */
		min-height: 1.5rem; /* var(--input-height); */
		width: 1.5rem;
		flex: 0 0 1.5rem;
	}
	div.property.range button.selected {
		border: 2px inset;
		background: var(--color-medium-gray);
	}

	div.property.coverage {
		display: flex;
		flex-flow: row wrap;
		align-content: center;
	}
	div.property.coverage div.property-name {
		order: unset;
		flex: 0 0 100%;
	}
	div.property.coverage div.property-value {
		display: flex;
		flex-direction: row;
		align-items: center;
	}
	div.property.coverage div.property-value button {
		--property-button-size: 1rem;
		height: var(--property-button-size);
		min-height: var(--property-button-size);
		width: var(--property-button-size);
		border-radius: var(--property-button-size);
		border: 0;
		margin-left: 0.25rem;
		margin-right: var(--gap-standard);
	}
	div.property.coverage div.add-coverage {
		margin-top: var(--gap-standard);
		display: grid;
		grid-template-columns: 1fr min-content;
		align-items: center;
		flex: 0 0 fit-content;
	}
}

/**
 * Initiative Dialog
 */
.tribe8.initiative-dialog {
	.dialog-content.standard-form {
		gap: var(--gap-standard);
	}
	.form-group:not(.formula) {
		flex-flow: column;
		gap: 0;
		align-items: start;
	}
	.form-group>* {
		flex: 2 0 2rem;
	}
	.form-group label {
		color: var(--color-label-text);
		background: var(--color-label-background);
		line-height: 1rem;
		font-variant: small-caps;
		border-top: 1px solid;
		border-radius: var(--attribute-block-top-corners) var(--attribute-block-top-corners) 0 0;
		width: 100%;
		display: block;
		flex: 0 0 min-content;
		white-space: nowrap;
		padding: 0 var(--gap-standard);
	}
	.form-group.formula label {
		order: 2;
		font-style: italic;
		color: var(--color-medium-gray);
		background: revert;
		font-weight: normal;
		font-size: 90%;
		text-align: right;
		border: none;
		font-variant: normal;
		flex: 1 0 fit-content;
		padding: revert;
    }
	.form-group.formula input {
		order: 1;
		background: none;
		border: none;
		text-align: left;
		line-height: 1rem;
		height: 1rem;
		padding: 0;
	}
	.roll-configuration {
		margin-top: var(--gap-double);
		padding: var(--gap-double) var(--gap-standard) var(--gap-standard) var(--gap-standard);
		border: 1px inset var(--color-medium-gray);
		border-top: 0;
		border-bottom: 0;
		border-radius: var(--attribute-block-bottom-corners);
		display: flex;
		flex-flow: column;
		gap: 0.6rem;
		position: relative;
	}
	.roll-configuration>label {
		color: var(--color-medium-gray);
		position: absolute;
		display: block;
		top: -0.6rem;
		font-variant: small-caps;
		font-weight: bold;
		font-size: 1rem;
		left: 0;
		width: 100%;
		text-align: center;
	}
}

}
